{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\git\\\\MOOCCourses\\\\UdemyReactUltimateCourceNew\\\\section23\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst DetailsPage = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: \"A first meetup\",\n    imageSource: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Turning_Torso_3.jpg/1024px-Turning_Torso_3.jpg\",\n    address: \"Malmgatan 3, 22233 Malmstad\",\n    description: \"My first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://oskar:12345!!RekoIdag!@cluster0.jt1b7.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray().map(meetup => ({\n    params: {\n      meetupId: meetup._id.toString()\n    }\n  }));\n  return {\n    fallback: true,\n    paths: [{\n      params: {\n        meetupId: \"m1\"\n      }\n    }, {\n      params: {\n        meetupId: \"m2\"\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        title: \"A first meetup\",\n        imageSource: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Turning_Torso_3.jpg/1024px-Turning_Torso_3.jpg\",\n        address: \"Malmgatan 3, 22233 Malmstad\",\n        description: \"My first meetup\"\n      }\n    }\n  };\n}\nexport default DetailsPage;","map":{"version":3,"sources":["C:/wamp64/www/git/MOOCCourses/UdemyReactUltimateCourceNew/section23/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","DetailsPage","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","toArray","map","meetup","params","meetupId","_id","toString","fallback","paths","getStaticProps","context","props","meetupData","id","title","imageSource","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,WAAW,EAAC,0GAFd;AAGE,IAAA,OAAO,EAAC,6BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,qGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CACpCG,IADmB,GAEnBC,OAFmB,GAGnBC,GAHmB,CAGdC,MAAD,KAAa;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAEF,MAAM,CAACG,GAAP,CAAWC,QAAX;AAAZ;AAAV,GAAb,CAHe,CAAtB;AAIA,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAE,CAAC;AAAEL,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAV,KAAD,EAAiC;AAAED,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAV,KAAjC;AAFF,GAAP;AAID;AAED,OAAO,eAAeK,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMN,QAAQ,GAAGM,OAAO,CAACP,MAAR,CAAeC,QAAhC;AACA,SAAO;AACLO,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,EAAE,EAAET,QADM;AAEVU,QAAAA,KAAK,EAAE,gBAFG;AAGVC,QAAAA,WAAW,EACT,0GAJQ;AAKVC,QAAAA,OAAO,EAAE,6BALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AACD,eAAe1B,WAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst DetailsPage = () => {\r\n  return (\r\n    <MeetupDetail\r\n      title=\"A first meetup\"\r\n      imageSource=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Turning_Torso_3.jpg/1024px-Turning_Torso_3.jpg\"\r\n      address=\"Malmgatan 3, 22233 Malmstad\"\r\n      description=\"My first meetup\"\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://oskar:12345!!RekoIdag!@cluster0.jt1b7.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection\r\n    .find()\r\n    .toArray()\r\n    .map((meetup) => ({ params: { meetupId: meetup._id.toString() } }));\r\n  return {\r\n    fallback: true,\r\n    paths: [{ params: { meetupId: \"m1\" } }, { params: { meetupId: \"m2\" } }],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetupId,\r\n        title: \"A first meetup\",\r\n        imageSource:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/af/Turning_Torso_3.jpg/1024px-Turning_Torso_3.jpg\",\r\n        address: \"Malmgatan 3, 22233 Malmstad\",\r\n        description: \"My first meetup\",\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default DetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}