{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\git\\\\MOOCCourses\\\\UdemyReactUltimateCourceNew\\\\section23\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar DetailsPage = function DetailsPage() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetupData.title,\n    imageSource: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = DetailsPage;\nexport var __N_SSG = true;\nexport default DetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailsPage\");","map":{"version":3,"sources":["C:/wamp64/www/git/MOOCCourses/UdemyReactUltimateCourceNew/section23/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","DetailsPage","props","meetupData","title","image","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEC,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,WAAW,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFhC;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;KAAMN,W;;AAyDN,eAAeA,WAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nconst DetailsPage = () => {\r\n  return (\r\n    <MeetupDetail\r\n      title={props.meetupData.title}\r\n      imageSource={props.meetupData.image}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://oskar:12345!!RekoIdag!@cluster0.jt1b7.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  const convertedMeetups = meetups.map((meetup) => ({\r\n    params: { meetupId: meetup._id.toString() },\r\n  }));\r\n\r\n  client.close();\r\n  return {\r\n    fallback: true,\r\n    paths: convertedMeetups,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://oskar:12345!!RekoIdag!@cluster0.jt1b7.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        description: selectedMeetup.description,\r\n        image: selectedMeetup.image,\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default DetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}